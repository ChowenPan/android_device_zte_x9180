From 282e9309057bd56e8eadf0a394ce09cbab7b9aaf Mon Sep 17 00:00:00 2001
From: amspeople <amspeople@yandex.ru>
Date: Mon, 13 Apr 2015 18:38:24 +0300
Subject: [PATCH] Show/Hide notice empty SIM

Change-Id: I7e5638e6c788c6ab5c670e4c9705ead4cce806bb
---
 .../src/com/android/keyguard/CarrierText.java      | 35 +++++++++++++++++++++-
 1 file changed, 34 insertions(+), 1 deletion(-)

diff --git a/packages/Keyguard/src/com/android/keyguard/CarrierText.java b/packages/Keyguard/src/com/android/keyguard/CarrierText.java
index 6b7b39c..1e8f461 100644
--- a/packages/Keyguard/src/com/android/keyguard/CarrierText.java
+++ b/packages/Keyguard/src/com/android/keyguard/CarrierText.java
@@ -27,6 +27,10 @@ import android.util.Log;
 import android.view.View;
 import android.widget.TextView;
 
+import android.database.ContentObserver;
+import android.os.Handler;
+import android.provider.Settings.System;
+
 import com.android.internal.telephony.IccCardConstants;
 import com.android.internal.widget.LockPatternUtils;
 
@@ -44,6 +48,23 @@ public class CarrierText extends TextView {
     private boolean mDisplayAirplaneMode;
     private boolean mAirplaneModeActive;
 
+    private boolean mShowEmptySimMessage;
+
+    class SettingsObserver extends ContentObserver {
+          SettingsObserver(Handler handler) {
+               super(handler);
+          }
+
+          void observe() {
+               mContext.getContentResolver().registerContentObserver(System.getUriFor("status_bar_hide_empty_sim_message"), false, this);
+          }
+
+          @Override
+          public void onChange(boolean selfChange) {
+               updateSettings();
+          }
+     }
+
     private KeyguardUpdateMonitorCallback mCallback = new KeyguardUpdateMonitorCallback() {
         @Override
         public void onRefreshCarrierInfo(long subId, CharSequence plmn, CharSequence spn) {
@@ -106,6 +127,14 @@ public class CarrierText extends TextView {
             a.recycle();
         }
         setTransformationMethod(new CarrierTextTransformationMethod(mContext, useAllCaps));
+
+        new SettingsObserver(new Handler()).observe();
+    }
+
+    private void updateSettings() {
+        mShowEmptySimMessage = (System.getInt(mContext.getContentResolver(), "status_bar_hide_empty_sim_message", 1) != 0);
+        Log.d(TAG, "mShowEmptySimMessage = " + mShowEmptySimMessage);
+        updateCarrierText();
     }
 
     @Override
@@ -200,9 +229,13 @@ public class CarrierText extends TextView {
                 // This depends on mPlmn containing the text "Emergency calls only" when the radio
                 // has some connectivity. Otherwise, it should be null or empty and just show
                 // "No SIM card"
-                carrierText =  makeCarrierStringOnEmergencyCapable(
+                if (!mShowEmptySimMessage){
+                        carrierText = null;
+                } else {
+                        carrierText =  makeCarrierStringOnEmergencyCapable(
                         getContext().getText(R.string.keyguard_missing_sim_message_short),
                         plmn);
+                }
                 break;
 
             case SimPermDisabled:
-- 
2.1.4

